"""–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ç—Ä–µ–π–¥–µ—Ä–∞"""

import streamlit as st
from typing import Optional
import time

def setup_purple_theme() -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π —Ç–µ–º—ã –¥–ª—è Streamlit"""
    
    # –ö–∞—Å—Ç–æ–º–Ω—ã–π CSS –¥–ª—è —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π —Ç–µ–º—ã
    st.markdown("""
    <style>
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã */
    :root {
        --primary: #8B5CF6;
        --primary-dark: #7C3AED;
        --primary-light: #A78BFA;
        --secondary: #C4B5FD;
        --accent: #F59E0B;
        --background: #F8FAFC;
        --surface: #FFFFFF;
        --text-primary: #1F2937;
        --text-secondary: #6B7280;
        --success: #10B981;
        --warning: #F59E0B;
        --error: #EF4444;
    }
    
    /* –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */
    .main {
        background: var(--background);
    }
    
    /* –í–µ—Ä—Ö–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */
    .header-container {
        background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
        padding: 1.5rem 2rem;
        border-radius: 0 0 20px 20px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(139, 92, 246, 0.3);
    }
    
    .main-header {
        color: white;
        font-size: 2.5rem;
        font-weight: 800;
        margin: 0;
        text-align: center;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .subheader {
        color: rgba(255,255,255,0.9);
        font-size: 1.2rem;
        text-align: center;
        margin: 0.5rem 0 0 0;
        font-weight: 400;
    }
    
    /* –ö–∞—Ä—Ç–æ—á–∫–∏ */
    .feature-card {
        background: var(--surface);
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 4px solid var(--primary);
        box-shadow: 0 4px 12px rgba(139, 92, 246, 0.1);
        margin: 1rem 0;
        transition: all 0.3s ease;
    }
    
    .feature-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(139, 92, 246, 0.15);
    }
    
    .stat-card {
        background: linear-gradient(135deg, var(--primary-light), var(--secondary));
        padding: 1.5rem;
        border-radius: 15px;
        text-align: center;
        color: var(--text-primary);
        margin: 0.5rem;
    }
    
    /* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */
    .sidebar .sidebar-content {
        background: linear-gradient(180deg, var(--primary) 0%, var(--primary-dark) 100%);
    }
    
    .sidebar .sidebar-content * {
        color: white !important;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ */
    .stButton>button {
        background: linear-gradient(45deg, var(--primary), var(--primary-light));
        color: white;
        border: none;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
        width: 100%;
    }
    
    .stButton>button:hover {
        background: linear-gradient(45deg, var(--primary-dark), var(--primary));
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(139, 92, 246, 0.4);
    }
    
    .btn-secondary {
        background: linear-gradient(45deg, var(--secondary), var(--primary-light)) !important;
    }
    
    /* –ü–æ–ª—è –≤–≤–æ–¥–∞ */
    .stTextInput>div>div>input {
        border: 2px solid var(--secondary);
        border-radius: 12px;
        padding: 0.75rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }
    
    .stTextInput>div>div>input:focus {
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.2);
    }
    
    /* –ß–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è */
    .stChatMessage {
        padding: 1.25rem;
        border-radius: 18px;
        margin: 0.75rem 0;
        border: none;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    .stChatMessage[data-testid="user"] {
        background: linear-gradient(135deg, var(--primary-light), var(--secondary));
        margin-left: 2rem;
    }
    
    /* –°–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
    .stChatMessage[data-testid="assistant"] {
        background: var(--surface);
        margin-right: 2rem;
        box-shadow: 0 4px 15px rgba(139, 92, 246, 0.1);
        border: 1px solid var(--secondary);
    }
    
    /* –°–ø–∏–Ω–Ω–µ—Ä –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */
    .stSpinner>div {
        border-color: var(--primary) transparent transparent transparent;
    }
    
    .header-container .emoji {
    filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
    font-size: 3rem !important;
    display: block;
    margin-bottom: 0.5rem;
    }
    
    .status-indicator {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 8px;
    }
    
    .header-container *[role="img"] {
        filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
    }

    .status-online {
        background: var(--success);
    }
    
    .status-offline {
        background: var(--error);
    }
    
    /* Expander */
    .streamlit-expanderHeader {
        background-color: var(--secondary);
        color: var(--text-primary);
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
    }
    
    .streamlit-expanderContent {
        background: var(--surface);
        border-radius: 0 0 12px 12px;
        padding: 1rem;
    }
    
    /* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
    .stAlert {
        border-radius: 12px;
        border: none;
        padding: 1rem 1.5rem;
    }
    
    .stAlert[data-testid="stInfo"] {
        background: linear-gradient(135deg, #C4B5FD, #DDD6FE);
        color: var(--text-primary);
        border-left: 4px solid var(--primary);
    }
    
    .stAlert[data-testid="stWarning"] {
        background: linear-gradient(135deg, #FEF3C7, #FDE68A);
        color: var(--text-primary);
        border-left: 4px solid var(--warning);
    }
    
    .stAlert[data-testid="stError"] {
        background: linear-gradient(135deg, #FECACA, #FCA5A5);
        color: var(--text-primary);
        border-left: 4px solid var(--error);
    }
    
    .stAlert[data-testid="stSuccess"] {
        background: linear-gradient(135deg, #A7F3D0, #6EE7B7);
        color: var(--text-primary);
        border-left: 4px solid var(--success);
    }
    
    /* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */
    .stMarkdown hr {
        border: none;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--primary), transparent);
        margin: 2rem 0;
    }
    
    /* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */
    .stProgress > div > div > div {
        background: linear-gradient(90deg, var(--primary), var(--primary-light));
    }
    
    /* –ù–∏–∂–Ω–∏–π —Å—Ç–∞—Ç—É—Å –±–∞—Ä */
    .status-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: var(--surface);
        padding: 0.5rem 1rem;
        border-top: 1px solid var(--secondary);
        font-size: 0.8rem;
        color: var(--text-secondary);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    .fade-in {
        animation: fadeIn 0.5s ease-out;
    }
    
    /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
    @media (max-width: 768px) {
        .header-container {
            padding: 1rem;
            border-radius: 0 0 15px 15px;
        }
        
        .main-header {
            font-size: 2rem;
        }
    }
    
    </style>
    """, unsafe_allow_html=True)

def create_status_bar() -> None:
    """–°–æ–∑–¥–∞—Ç—å –Ω–∏–∂–Ω—é—é —Å—Ç–∞—Ç—É—Å–Ω—É—é –ø–∞–Ω–µ–ª—å"""
    st.markdown("""
    <div class="status-bar">
        <div>
            <span class="status-indicator status-online"></span>
            AI –¢—Ä–µ–π–¥–µ—Ä ‚Ä¢ 
            <span id="current-time"></span>
        </div>
        <div>
            ü§ñ Powered by Finam TradeAPI & OpenRouter
        </div>
    </div>
    
    <script>
        function updateTime() {
            const now = new Date();
            document.getElementById('current-time').textContent = 
                now.toLocaleTimeString('ru-RU');
        }
        setInterval(updateTime, 1000);
        updateTime();
    </script>
    """, unsafe_allow_html=True)

def create_feature_cards() -> None:
    """–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        <div class="feature-card fade-in">
            <div style="font-size: 2rem; margin-bottom: 0.5rem;">üìä</div>
            <h3 style="margin: 0 0 0.5rem 0; color: var(--primary);">–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞</h3>
            <p style="margin: 0; color: var(--text-secondary);">–†–µ–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∞–∫—Ü–∏–π, —Å—Ç–∞–∫–∞–Ω—ã, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="feature-card fade-in">
            <div style="font-size: 2rem; margin-bottom: 0.5rem;">üíº</div>
            <h3 style="margin: 0 0 0.5rem 0; color: var(--primary);">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>
            <p style="margin: 0; color: var(--text-secondary);">–ü–æ—Ä—Ç—Ñ–µ–ª—å, –æ—Ä–¥–µ—Ä–∞, –±–∞–ª–∞–Ω—Å –∏ –∏—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫</p>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div class="feature-card fade-in">
            <div style="font-size: 2rem; margin-bottom: 0.5rem;">üåÜ</div>
            <h3 style="margin: 0 0 0.5rem 0; color: var(--primary);">AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</h3>
            <p style="margin: 0; color: var(--text-secondary);">–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</p>
        </div>
        """, unsafe_allow_html=True)

def create_quick_stats() -> None:
    """–°–æ–∑–¥–∞—Ç—å –±—ã—Å—Ç—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    st.markdown("### üìà –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown("""
        <div class="stat-card">
            <div style="font-size: 1.5rem; font-weight: bold;">50+</div>
            <div>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="stat-card">
            <div style="font-size: 1.5rem; font-weight: bold;">24/7</div>
            <div>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div class="stat-card">
            <div style="font-size: 1.5rem; font-weight: bold;">0.1—Å</div>
            <div>–ó–∞–¥–µ—Ä–∂–∫–∞ API</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown("""
        <div class="stat-card">
            <div style="font-size: 1.5rem; font-weight: bold;">AI</div>
            <div>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
        </div>
        """, unsafe_allow_html=True)

def show_enhanced_instructions() -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    
    st.markdown("""
    <div class="header-container">
        <div class="emoji">ü§ñ</div>
        <h1 class="main-header">üéØ –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å AI –¢—Ä–µ–π–¥–µ—Ä–æ–º</h1>
        <p class="subheader">–í–∞—à –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏</p>
    </div>
    """, unsafe_allow_html=True)
    
    # –ö–∞—Ä—Ç–æ—á–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    create_feature_cards()
    
    # –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    create_quick_stats()
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–µ
    with st.expander("üöÄ **–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç**", expanded=True):
        st.markdown("""
        ### 3 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
        
        1. **üîë –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –¥–æ—Å—Ç—É–ø** –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
        2. **üí¨ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å** –≤ —á–∞—Ç–µ –Ω–∏–∂–µ
        3. **üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã** —Å –ø–æ–º–æ—â—å—é AI
        """)
        
        col1, col2 = st.columns(2)
        with col1:
            if st.button("üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", use_container_width=True):
                st.session_state.show_detailed_instructions = True
        with col2:
            if st.button("üéØ –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤", use_container_width=True):
                st.session_state.show_examples = True
    
    if st.session_state.get('show_detailed_instructions'):
        show_detailed_instructions()
    
    if st.session_state.get('show_examples'):
        show_examples_section()

def show_detailed_instructions() -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    st.markdown("---")
    
    tabs = st.tabs(["üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞", "üí¨ –û–±—â–µ–Ω–∏–µ", "üîß API", "üö® –ü–æ–º–æ—â—å"])
    
    with tabs[0]:
        st.markdown("""
        ### üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞
        
        **Finam API –¢–æ–∫–µ–Ω:**
        - –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Finam
        - –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
        - –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è `FINAM_ACCESS_TOKEN`
        
        **ID –°—á–µ—Ç–∞:**
        - –£–∫–∞–∂–∏—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—é
        - –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        """)
    
    with tabs[1]:
        st.markdown("""
        ### üí¨ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ
        
        **–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:**
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã (SBER, GAZP)
        - –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        - –ó–∞–¥–∞–≤–∞–π—Ç–µ —á–µ—Ç–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
        
        **–ü—Ä–∏–º–µ—Ä—ã:**
        - ‚ùå _"–ß—Ç–æ —Å –∞–∫—Ü–∏—è–º–∏?"_
        - ‚úÖ _"–ö–∞–∫–∞—è —Ü–µ–Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞ –∏ –¥–∏–Ω–∞–º–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é?"_
        """)
    
    with tabs[2]:
        st.markdown("""
        ### üîç –†–∞–±–æ—Ç–∞ —Å API
        
        **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã:**
        - AI —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω—É–∂–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ API
        - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç
        
        **–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:**
        - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–æ–∫
        - –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ä–¥–µ—Ä–æ–≤
        - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        """)
    
    with tabs[3]:
        st.markdown("""
        ### üö® –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
        
        **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**
        
        **–¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
        - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø—ã –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Finam
        
        **–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è:**
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ Finam API
        - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å
        """)

def show_examples_section() -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ü–∏—é —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    st.markdown("---")
    st.markdown("### üí° –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    
    examples = [
        {"emoji": "üìà", "text": "–ö–∞–∫–∞—è —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞?", "category": "–ö–æ—Ç–∏—Ä–æ–≤–∫–∏"},
        {"emoji": "üíº", "text": "–ü–æ–∫–∞–∂–∏ –º–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å", "category": "–ü–æ—Ä—Ç—Ñ–µ–ª—å"},
        {"emoji": "üîç", "text": "–ß—Ç–æ –≤ —Å—Ç–∞–∫–∞–Ω–µ –ø–æ –ì–∞–∑–ø—Ä–æ–º—É?", "category": "–ê–Ω–∞–ª–∏–∑"},
        {"emoji": "üìä", "text": "–ì—Ä–∞—Ñ–∏–∫ YNDX –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é", "category": "–ì—Ä–∞—Ñ–∏–∫–∏"},
        {"emoji": "‚ö°", "text": "–ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞", "category": "–¢–æ—Ä–≥–æ–≤–ª—è"},
        {"emoji": "ü§î", "text": "–ù–∞–π–¥–∏ —Ç–∏–∫–µ—Ä –õ—É–∫–æ–π–ª–∞", "category": "–ü–æ–∏—Å–∫"},
    ]
    
    cols = st.columns(2)
    for idx, example in enumerate(examples):
        with cols[idx % 2]:
            if st.button(
                f"{example['emoji']} {example['text']}",
                help=f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {example['category']}",
                use_container_width=True
            ):
                st.session_state.example_query = example['text']
                st.rerun()

def create_welcome_screen() -> None:
    """–°–æ–∑–¥–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω"""
    show_enhanced_instructions()
    create_status_bar()

def initialize_app() -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π —Ç–µ–º–æ–π"""
    setup_purple_theme()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if "app_initialized" not in st.session_state:
        st.session_state.app_initialized = True
        st.session_state.show_detailed_instructions = False
        st.session_state.show_examples = False

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
__all__ = [
    'setup_purple_theme',
    'create_status_bar',
    'create_feature_cards',
    'create_quick_stats',
    'show_enhanced_instructions',
    'create_welcome_screen',
    'initialize_app'
]